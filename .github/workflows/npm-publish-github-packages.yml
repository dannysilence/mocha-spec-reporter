# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on: 
  push:
    branches:
    - main
    - develop
    - release/*
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info' 
        type: choice
        options:
        - info
        - warning
        - debug 
      print_tags:
        description: 'True to print to STDOUT'
        required: true 
        type: boolean 
jobs:
  publish-node:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org/'
          scope: '@dannysilence'
      - name: Build package
        run: |
          npm ci
          npm test
      - name: Patch package version
        if: github.ref == 'refs/heads/main'
        run:
          npm version patch --no-git-tag-version
      - name: Patch package version
        if: github.ref == 'refs/heads/develop'
        run:
          npm version prepatch --no-git-tag-version
      - name: Publish Package
        run:
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  publish-gpr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@dannysilence'
      - name: Build package
        run: |
          npm ci
          npm test
      - name: Patch package version
        if: github.ref == 'refs/heads/main'
        run:
          npm version patch --no-git-tag-version
      - name: Patch package version
        if: github.ref == 'refs/heads/develop'
        run:
          npm version prepatch --no-git-tag-version
      - name: Publish Package
        run:
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Push Updated package.json
        run: |
          git config --global user.name 'git'
          git config --global user.email 'actions@github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git add package.json
          git commit -am "Automated report"
          git push
